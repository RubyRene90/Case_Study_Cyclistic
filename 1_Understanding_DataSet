/* CREATED BY: RUBY SMITH
CREATED ON: 09/24/2024
GOAL: EXPLORE DATASETS FOR CYCLISTIC BIKE DATA. USING 202309_tripdata.*/
____________________________________________________

--CHECKING NULL VALUES IN 'START_STATION_NAME' COLUMN (101312 results)
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  start_station_name IS NULL;


--CHECKING NULL VALUES IN 'END_STATION_NAME' COLUMN (107291 results)
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  end_station_name IS NULL;


--CHECKING NULL VALUES FOR LATITUDE AND LONGITUDE (STARTING), I CAN USE LOCATIONS AS LONG AS I HAVE VALUES FOR LONGITUDE AND LATITUDE.
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  start_lat IS NULL
  OR
  start_lng IS NULL;


--CHECKING NULL VALUES FOR LATITUDE AND LONGITUDE (ENDING), 838 RESULTS. DID CUSTOMERS FORGET TO END RIDE OR WAS THERE AN ISSUE WITH GETTING DATA?
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  end_lat IS NULL
  OR
  end_lng IS NULL;


--CHECKING TO SEE HOW MANY OF EACH TYPE OF RIDER HAS A NULL VALUE FOR LATITUDE AND LONGITUDE IF THERE IS A TREND. RESULTS: 698 CASUAL, 140 MEMBERSHIPS
SELECT
  member_casual,
  COUNT(member_casual) AS ride_count
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  end_lat IS NULL
  OR
  end_lng IS NULL
GROUP BY
  1;
____________________________________________________
--CHECKING THE DIFFERENCE IN COUNT OF MEMBERSHIP RIDES VS CASUAL RIDES
--TOTAL 666731, CASUAL 261635 (39.3%), MEMBERSHIP 404736 (60.7%)
SELECT
  member_casual,
  COUNT(member_casual) AS ride_count,
  ROUND((COUNT(member_casual)/
  (
    SELECT 
    COUNT(member_casual) 
    FROM rs-project-01-429415.cyclistic_bike_data.202309_tripdata
  ) 
  * 100), 2) AS percent_of_members
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
GROUP BY
  1;

____________________________________________________
--CHECKING RIDEABLE TYPES AND IF MEMBERSHIP RIDERS AND CASUAL RIDERS HAVE A PREFERENCE 
SELECT
  member_casual,
  rideable_type,
  COUNT(member_casual) AS ride_count,
  ROUND((COUNT(member_casual)/
  (
    SELECT 
    COUNT(member_casual) 
    FROM rs-project-01-429415.cyclistic_bike_data.202309_tripdata
  ) 
  * 100), 2) AS percent_of_rides
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
GROUP BY
  1,
  2;
____________________________________________________

/* Created By: Ruby Smith
Created On: 09/26/2024
Goal: Use UNION ALL to combine 12 MONTHS of datasets and create new table */

--Total results BEFORE removing latitude and longitude NULLs: 5,699,639
--Total results AFTER removing latitude and longitude NULLs: 5,692,113 (7526 entries removed)
--I want to check data geographically, and won't be able to check NULLs.

CREATE TABLE cyclistic_bike_data.annual_202309_202408_tripdata AS
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202309_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202310_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202311_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202312_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202401_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202402_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202403_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202404_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202405_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202406_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202407_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL
UNION ALL
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.202408_tripdata
WHERE
  start_lat IS NOT NULL
  AND start_lng IS NOT NULL
  AND end_lat IS NOT NULL
  AND end_lng IS NOT NULL;
