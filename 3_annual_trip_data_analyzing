/*CREATED BY: RUBY SMITH
CREATED ON: 10/01/2024
GOAL: RUN SOME BASIC AGGREGATE DATA AND IMPORT RESULTS INTO GOOGLE SHEETS FOR ANALYSIS*/

--ANNUAL RESULTS OF AGGREGATED DATA (OVERALL)
SELECT
  COUNT(member_casual) AS member_count,
  ROUND(AVG(trip_time_seconds), 2) AS annual_avg,
  ROUND(MIN(trip_time_seconds), 2) AS annual_min,
  ROUND(MAX(trip_time_seconds), 2) AS annual_max
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`;


--ANNUAL RESULTS OF AGGREGATED DATA (SEPARATED BY RIDER TYPE: MEMBERS VS CASUALS)
SELECT
  member_casual AS member_status,
  COUNT(member_casual) AS member_count,
  ROUND((COUNT(member_casual)/
  (
    SELECT 
    COUNT(member_casual) 
    FROM rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
  ) 
  * 100), 2) AS percent_of_members,
  ROUND(AVG(trip_time_seconds), 2) AS annual_avg,
  ROUND(MIN(trip_time_seconds), 2) AS annual_min,
  ROUND(MAX(trip_time_seconds), 2) AS annual_max
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
GROUP BY
  1;
______________________________________________________
--THE MINIMUM TRIP TIME IS NEGATIVE, ISSUE WITH TIME ENTRIES (344 ROWS)
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
WHERE 
  trip_time_seconds < 0;


--REMOVED ROWS WITH NEGATIVE TRIP TIME AFTER VERIFYING COLUMNS WERE CORRECT IN ORIGINAL DATA TABLES. 
DELETE
  rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
WHERE
trip_time_seconds < 0;

______________________________________________________
--THE MAXIMUM TRIP TIME WAS OVER 24 HOURS LONG (389 ROWS)
SELECT
  *
FROM
  rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
WHERE 
  trip_time_seconds > 86400;


-- REMOVED ROWS WITH TRIP TIME OVER 24 HOURS AFTER VERIFYING COLUMNS WERE CORRECT IN ORIGINAL DATA TABLES.
-- MY DATA TABLE WILL SHOW RESULTS OF TRIPS THAT ARE WITHIN 24 HOURS
DELETE
  rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
WHERE
trip_time_seconds > 86400;

______________________________________________________
--CHECKING ANNUAL USE OF BIKE TYPES.
SELECT
  member_casual,
  COUNT(rideable_type)
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
WHERE
  rideable_type LIKE 'electric_bike' --CHANGE TYPE FOR OTHER RESULTS
GROUP BY
  1;

______________________________________________________
--MONTHLY AGGREGATES
______________________________________________________
--BELOW QUERY SHOWS AGGREGATED DATA BROKEN DOWN MONTHLY FOR CASUAL RIDERS ONLY
SELECT
  FORMAT_DATE('%m', start_date) AS month,
  COUNT(member_casual) AS member_count,
  ROUND((COUNT(member_casual)/
  (
    SELECT 
      COUNT(member_casual) 
    FROM rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
    WHERE 
      member_casual LIKE 'casual'
  ) 
  * 100), 2) AS percent_of_members,
  ROUND(AVG(trip_time_seconds), 2) AS monthly_avg,
  ROUND(MIN(trip_time_seconds), 2) AS monthly_min,
  ROUND(MAX(trip_time_seconds), 2) AS monthly_max
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
WHERE 
  member_casual LIKE 'casual'
GROUP BY 
  month
ORDER BY
  month;


--QUERY SHOWS HOW MANY CASUAL RIDERS PICKED A SPECIFIC BIKE TYPE
SELECT
  FORMAT_DATE('%m', start_date) AS month,
  COUNT(rideable_type)
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
WHERE
  member_casual LIKE 'casual'
  AND
  rideable_type LIKE 'classic_bike'  --CHANGE TYPE FOR OTHER RESULTS
GROUP BY
month
ORDER BY
month;

______________________________________________________
--BELOW QUERY SHOWS AGGREGATED DATA BROKEN DOWN MONTHLY FOR MEMBERSHIP RIDERS ONLY
SELECT
  FORMAT_DATE('%m', start_date) AS month,
  COUNT(member_casual) AS member_count,
  ROUND((COUNT(member_casual)/
  (
    SELECT 
      COUNT(member_casual) 
    FROM rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2
    WHERE 
      member_casual LIKE 'member'
  ) 
  * 100), 2) AS percent_of_members,
  ROUND(AVG(trip_time_seconds), 2) AS monthly_avg,
  ROUND(MIN(trip_time_seconds), 2) AS monthly_min,
  ROUND(MAX(trip_time_seconds), 2) AS monthly_max
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
WHERE 
  member_casual LIKE 'member'
GROUP BY 
  month
ORDER BY
  month;


--QUERY SHOWS HOW MANY MEMBERSHIP RIDERS PICKED A SPECIFIC BIKE TYPE
SELECT
  FORMAT_DATE('%m', start_date) AS month,
  COUNT(rideable_type)
FROM
  `rs-project-01-429415.cyclistic_bike_data.annual_202309_202408_tripdata2`
WHERE
  member_casual LIKE 'member'
  AND
  rideable_type LIKE 'classic_bike'  ---CHANGE TYPE FOR OTHER RESULTS
GROUP BY
month
ORDER BY
month;
______________________________________________________
